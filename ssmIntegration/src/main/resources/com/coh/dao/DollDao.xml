<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.coh.dao.DollDao">
  <resultMap id="BaseResultMap" type="com.coh.pojo.Doll">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="age" jdbcType="INTEGER" property="age" />
    <result column="skin" jdbcType="VARCHAR" property="skin" />
    <result column="outfit" jdbcType="VARCHAR" property="outfit" />
    <result column="measurements" jdbcType="VARCHAR" property="measurements" />
    <result column="lang" jdbcType="VARCHAR" property="lang" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, `name`, age, skin, outfit, measurements, lang
  </sql>
  <select id="selectByExample" parameterType="com.coh.pojo.DollExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from doll
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from doll
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from doll
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.coh.pojo.DollExample">
    delete from doll
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.coh.pojo.Doll" useGeneratedKeys="true">
    insert into doll (`name`, age, skin, 
      outfit, measurements, lang
      )
    values (#{name,jdbcType=VARCHAR}, #{age,jdbcType=INTEGER}, #{skin,jdbcType=VARCHAR}, 
      #{outfit,jdbcType=VARCHAR}, #{measurements,jdbcType=VARCHAR}, #{lang,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.coh.pojo.Doll" useGeneratedKeys="true">
    insert into doll
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="name != null">
        `name`,
      </if>
      <if test="age != null">
        age,
      </if>
      <if test="skin != null">
        skin,
      </if>
      <if test="outfit != null">
        outfit,
      </if>
      <if test="measurements != null">
        measurements,
      </if>
      <if test="lang != null">
        lang,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="age != null">
        #{age,jdbcType=INTEGER},
      </if>
      <if test="skin != null">
        #{skin,jdbcType=VARCHAR},
      </if>
      <if test="outfit != null">
        #{outfit,jdbcType=VARCHAR},
      </if>
      <if test="measurements != null">
        #{measurements,jdbcType=VARCHAR},
      </if>
      <if test="lang != null">
        #{lang,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.coh.pojo.DollExample" resultType="java.lang.Long">
    select count(*) from doll
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update doll
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.name != null">
        `name` = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.age != null">
        age = #{record.age,jdbcType=INTEGER},
      </if>
      <if test="record.skin != null">
        skin = #{record.skin,jdbcType=VARCHAR},
      </if>
      <if test="record.outfit != null">
        outfit = #{record.outfit,jdbcType=VARCHAR},
      </if>
      <if test="record.measurements != null">
        measurements = #{record.measurements,jdbcType=VARCHAR},
      </if>
      <if test="record.lang != null">
        lang = #{record.lang,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update doll
    set id = #{record.id,jdbcType=INTEGER},
      `name` = #{record.name,jdbcType=VARCHAR},
      age = #{record.age,jdbcType=INTEGER},
      skin = #{record.skin,jdbcType=VARCHAR},
      outfit = #{record.outfit,jdbcType=VARCHAR},
      measurements = #{record.measurements,jdbcType=VARCHAR},
      lang = #{record.lang,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.coh.pojo.Doll">
    update doll
    <set>
      <if test="name != null">
        `name` = #{name,jdbcType=VARCHAR},
      </if>
      <if test="age != null">
        age = #{age,jdbcType=INTEGER},
      </if>
      <if test="skin != null">
        skin = #{skin,jdbcType=VARCHAR},
      </if>
      <if test="outfit != null">
        outfit = #{outfit,jdbcType=VARCHAR},
      </if>
      <if test="measurements != null">
        measurements = #{measurements,jdbcType=VARCHAR},
      </if>
      <if test="lang != null">
        lang = #{lang,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.coh.pojo.Doll">
    update doll
    set `name` = #{name,jdbcType=VARCHAR},
      age = #{age,jdbcType=INTEGER},
      skin = #{skin,jdbcType=VARCHAR},
      outfit = #{outfit,jdbcType=VARCHAR},
      measurements = #{measurements,jdbcType=VARCHAR},
      lang = #{lang,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>